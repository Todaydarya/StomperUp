<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Yellow.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="Grid" x:Key="GridStyle">
        <Setter Property="Background" Value="White"/>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Raleway Black"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>
    
    <Style x:Key="UnderlineOnHover" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Raleway Black"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Foreground" Value="Black"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextDecorations" Value="Underline" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="TextDecorations" Value="{x:Null}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Border Background="Transparent" BorderBrush="Black" BorderThickness="1" CornerRadius="5">
                            <ContentPresenter x:Name="contentPresenter" Margin="5" Width="20" Height="20"/>
                        </Border>
                        <TextBlock x:Name="checkMark" Text="✓" FontSize="24" FontWeight="Bold" Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="checkMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="btnMenuIcon">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Rectangle x:Name="highlightRectangle" Opacity="0" Width="5" HorizontalAlignment="Left">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FAFF00"/>
                                    <GradientStop Color="#E1BF96" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="whiteRectangle" Opacity="0" Width="5" HorizontalAlignment="Left" Fill="White"></Rectangle>
                        <Border x:Name="buttonBorder" Background="{TemplateBinding Background}" CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="highlightRectangle" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="highlightRectangle" Storyboard.TargetProperty="Width" To="55" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="highlightRectangle" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="highlightRectangle" Storyboard.TargetProperty="Width" To="10" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="highlightRectangle" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="highlightRectangle" Storyboard.TargetProperty="Width" To="60" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate TargetType="Button" x:Key="btnStyleMain">
        <Grid>
            <Border x:Name="btnBorder" CornerRadius="30">
                <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"></ContentPresenter>
                <Border.Background>
                    <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                        <GradientStop Color="#FAFF00"/>
                        <GradientStop Color="#E1BF96" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Rectangle x:Name="whiteRectangle" Opacity="0" Width="5" HorizontalAlignment="Left" Fill="White"></Rectangle>
        </Grid>


        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="whiteRectangle" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:0.3"/>
                            <DoubleAnimation Storyboard.TargetName="whiteRectangle" Storyboard.TargetProperty="Width" To="420" Duration="0:0:0.3"/>
                            <DoubleAnimation Storyboard.TargetName="whiteRectangle" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.9"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="whiteRectangle" Storyboard.TargetProperty="Width" To="10" Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>